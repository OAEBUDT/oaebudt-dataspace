name: Connector PR Validation

on:
  push:
    branches:
      - "develop"
    paths:
      - "connector/**"
      - "!**.md"
      - "!docs/**"
  pull_request:
    branches:
      - "develop"
    types: [opened, reopened, synchronize]
    paths:
      - "connector/**"
      - "!**.md"
      - "!docs/**"
      - "!CODEOWNERS"
      - "!LICENSE"
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-validate:
    name: Build and Validate Connector
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./connector  # Set default working directory for all run steps

    permissions:
      security-events: write
      contents: read
      actions: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full git history for sonar analysis

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: +security-and-quality

      - name: Build project
        run: ./gradlew build -x test --no-daemon

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run unit Tests
        run: ./gradlew test -x :tests:test --stacktrace

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true
        run: |
          echo "Starting SonarQube analysis..."
          ./gradlew sonar --info --no-build-cache --stacktrace 2>&1 | tee sonar.log | grep -v "ERROR\|WARN"
          echo "Analysis done. Full log in sonar.log (for review, not enforcement)."

      - name: Run E2E Tests
        run: ./gradlew :tests:test --stacktrace

      - name: Publish Tests Results
        uses: dorny/test-reporter@v1
        if: always() # Ensures the results are published regardless of test outcome
        with:
          name: E2E Tests Results
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
          fail-on-error: 'false'
